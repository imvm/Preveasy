//
// ModeloPropostaAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire

class ProposalModelAPI {
    /**

     - parameter completo: (query)  (optional)
     - parameter canalVenda: (query)  (optional)
     - parameter cnpj: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    class func modelopropostaGet(completo: String? = nil, canalVenda: String? = nil, cnpj: String? = nil, completion: @escaping ((_ data: ProposalModelsResponse?,_ error: Error?) -> Void)) {
        modelopropostaGetWithRequestBuilder(completo: completo, canalVenda: canalVenda, cnpj: cnpj).execute { (response, error) -> Void in
            if error == nil {
                completion(response?.body, nil)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     - GET /modeloproposta
     - API Key:
       - type: apiKey X-Api-Key 
       - name: GatewayAPIKey
     - parameter completo: (query)  (optional)
     - parameter canalVenda: (query)  (optional)
     - parameter cnpj: (query)  (optional)
     - returns: RequestBuilder<Data> 
     */
    class func modelopropostaGetWithRequestBuilder(completo: String? = nil, canalVenda: String? = nil, cnpj: String? = nil) -> RequestBuilder<ProposalModelsResponse> {
        let path = "/modeloproposta"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "completo": completo, 
            "canalVenda": canalVenda, 
            "cnpj": cnpj
        ])

        let requestBuilder: RequestBuilder<ProposalModelsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
