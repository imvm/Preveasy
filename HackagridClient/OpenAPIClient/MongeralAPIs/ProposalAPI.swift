//
// PropostaAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire

class ProposalAPI {
    /**

     - parameter id: (path)  
     - parameter empresa: (query)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    class func propostaIdPost(id: String, empresa: String? = nil, body: RegisteredProposalRequest? = nil, completion: @escaping ((_ data: RegisteredProposalResponse?,_ error: Error?) -> Void)) {
        propostaIdPostWithRequestBuilder(id: id, empresa: empresa, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - POST /proposta/{id}
     - API Key:
       - type: apiKey X-Api-Key 
       - name: GatewayAPIKey
     - parameter id: (path)  
     - parameter empresa: (query)  (optional)
     - parameter body: (body)  (optional)
     - returns: RequestBuilder<Model1> 
     */
    class func propostaIdPostWithRequestBuilder(id: String, empresa: String? = nil, body: RegisteredProposalRequest? = nil) -> RequestBuilder<RegisteredProposalResponse> {
        var path = "/proposta/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "empresa": empresa
        ])

        let requestBuilder: RequestBuilder<RegisteredProposalResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
